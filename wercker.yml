# This references the default Ruby container from
# the Docker Hub.
# https://registry.hub.docker.com/_/ruby/
# If you want to use a specific version you would use a tag:
# ruby:2.2.2
box:
  id: ruby:latest

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
services:
  - id: mysql:5
    env:
      MYSQL_ROOT_PASSWORD: rootpasswd
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpasswd
      MYSQL_DATABASE: testdb
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html

  steps:
    # A step that executes `bundle install` command
    - bundle-install
    - rails-database-yml

    - script:
        name: DB schema load
        code: |
          RAILS_ENV=test bundle exec rake db:drop
          RAILS_ENV=test bundle exec rake db:create
          RAILS_ENV=test bundle exec rake db:migrate
          # RAILS_ENV=test bundle exec rake update_feed

    - script:
        name: echo ruby information
        code: |
          echo "ruby version $(ruby --version) running"
          echo "from location $(which ruby)"
          echo -p "gem list: $(gem list) "

    - script:
        name: rspec
        code: bundle exec rspec

develop-deploy:
  steps:
    - heroku-deploy:
        install-toolbelt: true
        key: $HEROKU_KEY
        user: $HEROKU_USER
        app-name: $HEROKU_APP_NAME
    - script:
        name: Update database
        code: heroku run rake db:migrate --app $HEROKU_APP_NAME
deploy:
  steps:
    - heroku-deploy:
        install-toolbelt: true
        key: $HEROKU_KEY
        user: $HEROKU_USER
        app-name: $HEROKU_APP_NAME
    - script:
        name: Update database
        code: heroku run rake db:migrate --app $HEROKU_APP_NAME
